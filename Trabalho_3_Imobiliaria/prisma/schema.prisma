// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Imovel {
  id          Int          @id @default(autoincrement())
  cidade      String       @db.VarChar(60)
  endereco    String       @db.VarChar(60)
  bairro      String       @db.VarChar(60)
  tamanho     String?      @db.VarChar(30)
  quarto      Int          @db.SmallInt
  banheiro    Int          @db.SmallInt
  garagem     Int          @db.SmallInt @default(0)
  preco       Decimal      @db.Decimal(10, 2)
  tipo        Tipo         @default(CASA)
  usuario     Usuario      @relation(fields: [usuarioId], references: [id])
  usuarioId   Int
  @@map("imoveis")
}

model imovelArquivado {
  id          Int          @id @default(autoincrement())
  cidade      String       @db.VarChar(60)
  endereco    String       @db.VarChar(60)
  bairro      String       @db.VarChar(60)
  tamanho     String?      @db.VarChar(30)
  quarto      Int          @db.SmallInt
  banheiro    Int          @db.SmallInt
  garagem     Int          @db.SmallInt @default(0)
  preco       Decimal      @db.Decimal(10, 2)
  tipo        Tipo          @default(CASA)
  usuario     Usuario      @relation(fields: [usuarioId], references: [id])
  usuarioId   Int
  @@map("imoveisArquivados")
}

enum Tipo {
  APARTAMENTO
  CASA
  COMERCIAL
  SITIO
  SOBRADO
}

model Usuario {
  id                  Int      @id @default(autoincrement())
  nome                String   @db.VarChar(60)
  email               String   @db.VarChar(40)
  senha               String   @db.VarChar(60)  
  nivel               Int      @default(1) // 1: Padr√£o, 2: Moderador, 3: Administrador
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt  
  imoveis             Imovel[]
  imoveisArquivados   imovelArquivado[] 
  logs                Log[]
  @@map("usuarios")
}

model Log {
  id           Int      @id @default(autoincrement())
  descricao    String   @db.VarChar(60)
  complemento  String   @db.VarChar(255)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt  
  usuario      Usuario  @relation(fields: [usuarioId], references: [id])
  usuarioId    Int
  @@map("logs")
}
